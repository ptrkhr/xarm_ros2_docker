ARG nvidia_cuda_version=12.2.2-devel-ubuntu22.04
FROM nvidia/cuda:${nvidia_cuda_version}
ARG USER=robot
ARG GROUP=robot
ARG UID=1000
ARG GID=1000
ARG VIRTUALGL_VERSION=3.1.1


ENV USER=${USER}
ENV GID=${GID}
ENV UID=${UID}
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8

SHELL ["/bin/bash", "-c"]

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        curl git sudo \
        software-properties-common \
        lsb-release && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /var/log/*

# ROS2 (https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html)
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update -y && \
    apt-get install -y --no-install-recommends \
        ros-humble-desktop \
        python3-rosdep \
        python3-colcon-common-extensions && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /var/log/*

# Install VirtualGL for remote GUI execution
RUN apt update && echo "https://github.com/VirtualGL/virtualgl/releases/download/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb" && cd /tmp && \
    curl -fsSL -O "https://github.com/VirtualGL/virtualgl/releases/download/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb" && \
    apt-get update && apt-get install -y --no-install-recommends "./virtualgl_${VIRTUALGL_VERSION}_amd64.deb" && \
    chmod -f u+s /usr/lib/libvglfaker.so /usr/lib/libvglfaker-nodl.so /usr/lib/libvglfaker-opencl.so /usr/lib/libdlfaker.so /usr/lib/libgefaker.so && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /var/log/* /tmp/* /var/tmp/*

# Create Default user
RUN groupadd -g $GID $GROUP && \
    useradd -m -s /bin/bash -u $UID -g $GROUP -G sudo $USER && \
    mkdir -p /tmp/.X11-unix && chmod 777 /tmp/.X11-unix && \
    sudo -u $USER mkdir -p /home/$USER/.ros && \
    sudo -u $USER mkdir -p /home/$USER/ros2_ws/src && \
    echo "$USER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

RUN echo "source /opt/ros/humble/setup.bash" >> /home/$USER/.bashrc

VOLUME ["/home/$USER/.ros"]

WORKDIR /home/$USER
CMD ["/bin/bash"]
